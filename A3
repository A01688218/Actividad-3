---
title: "ACTIVIDAD 3"
output: 
  flexdashboard::flex_dashboard:
    orientation: columns
    vertical_layout: fill
---

```{r setup, include=FALSE}
library(flexdashboard)
library(forcats)
library(dplyr)
library(ggplot2)
library(plyr)
library(DataExplorer)
library(ggthemes)
library(grid)
library(gridExtra)
library(factoextra)
library(FactoMineR)
library(corrplot)
library(viridis)
library(plotly)
library("Hmisc") #valores-p
library(DT) #tablas chingonas
library(scales)  # para porcentajes

```

```{r results = FALSE}
#Importando la data
df <- read.csv('C:\\Users\\eduar\\OneDrive - Instituto Tecnologico y de Estudios Superiores de Monterrey\\Tec Monterrey Adm TI M\\4. Analisis y minería de datos para la toma de desiciones\\A3\\Absenteeism_at_work.csv', 
               header = TRUE,  sep=";", na.strings = c('NA'))
#Matriz de correlación
##tradicional
round(cor(df),2)
#con libreria
datacorr <- df %>%
  select(-ID) %>%
  select(-Absenteeism.time.in.hours)

mydata.rcorr = rcorr(as.matrix(datacorr)) 
mydata.coeff = mydata.rcorr$r #correlación
mydata.cov = cov(datacorr)
mydata.p = mydata.rcorr$P   #valor p

```




# Resumen estadístico
## Column 1 {data-width=500 .tabset}



### Resumen inicial

```{r}

str(df) %>%
  knitr::kable()

```
<div class="box">
    Algunas de las variables realmente son categoricas, por ejemplo. Month.of.absence = none, jan, feb..., day of the week = monday, tuesday.... por lo que procederemos a mutarlas en factores, es decir variables categoricas con niveles.
</div>


### Resumen 2
```{r}
col <- c(2:5,12:17)
datos <- df
datos[col] <- lapply(datos[col], factor)

datos <- datos %>%
  mutate(Reason.for.absence = fct_recode(Reason.for.absence,'infectious,parasitic diseases'='0',
                              'Neoplasms'='1','Diseases of the blood'='2','Endocrine and metabolic diseases'='3','Mental and behavioural disorders'='4', 
                              'Diseases of the nervous system'='5','Diseases of the eye and adnexa'='6','Diseases of the ear and mastoid process'='7',
                              'Diseases of the circulatory system'='8','Diseases of the respiratory system'='9','Diseases of the digestive system'='10', 
                              'Diseases of the skin and subcutaneous tissue'='11','Diseases of the musculoskeletal system and connective tissue'='12', 
                              'Diseases of the genitourinary system'='13','Pregnancy, childbirth and the puerperium'='14','Certain conditions originating in the perinatal'='15', 
                              'Congenital malformations, deformations and chromosomal abnormalities'= '16','Symptoms, signs and abnormal clinical  findings'='17',
                              'Injury, poisoning and certain other consequences of external causes'= '18','causes of morbidity and mortality'='19',
                              'Factors influencing health status and contact with health services'='21','patient follow-up'='22','medical consultation'='23','blood donation'='24',
                              'laboratory examination'='25','unjustified absence'='26','physiotherapy'='27','dental consultation'='28'))


datos <- datos %>%
  mutate(Month.of.absence= fct_recode(Month.of.absence,'None'='0','Jan'='1','Feb'='2','Mar'='3','Apr'='4','May'='5',
                                    'Jun'='6','Jul'='7','Aug'='8','Sep'='9','Oct'='10','Nov'='11','Dec'='12') )
datos <- datos %>%
  mutate(Seasons= fct_recode(Seasons,'summer'='1','autumn'='2','winter'='3','spring'='4'))

datos <- datos %>%
  mutate(Education = fct_recode(Education,'highschool'='1','graduate'='2','postgraduate'='3','master& doctrate'='4'))

datos <- datos %>%
  mutate(Diciplinary.failture= fct_recode(Disciplinary.failure,'No'='0','Yes'='1'))
datos <- datos %>%
  mutate(Social.drinker= fct_recode(Social.drinker,'No'='0','Yes'='1'))
datos <- datos %>%
  mutate(Social.smoker= fct_recode(Social.smoker,'No'='0','Yes'='1'))
datos <- datos %>%
  mutate(Day.of.the.week = fct_recode(Day.of.the.week,"Monday"="2","Tuesday"="3","Wednesday"="4","Thursday"="5","Friday"="6"))


str(datos) %>%
  knitr::kable()


```


```{r results = FALSE}
 
```


## Column 2 {data-width=500}
### Existen nulos?
<div class="box">
    Aplicando "sum(is.na(df)) sabremos si existen nulos
</div>
```{r}

sum(is.na(df))

```
<div class="box">
    De esta forma sabemos que no debemos de tratar los datos para rellenar celdas vacias.
</div>

### Resumen estadístico

```{r}


#Existe una variable num que ha de referir a un tiempo(Work.load.Average.day), 
#No debe  de suponer ningun problema
#El resto de las variables son int
#varias variables son dummys 

#Estadísticos de las variables
statss.df <- as.data.frame(apply(df,2,summary))

datatable(statss.df, class = 'cell-border stripe')%>%
  formatRound(
    columns = 1:21,
    digits = 3
)

```


# Graficos

## Column 1 {data-width=500 .tabset}

### Grafico de correlación

```{r}

#Matriz de correlación con corrplot

oldp <- par(cex=.30)
pmc <- corrplot(mydata.coeff, type = 'lower',
                p.mat = mydata.p, 
                insig = "p-value",
                order = "hclust", 
                sig.level = 0.005,
                col = COL2('RdYlBu'),
                tl.col = "black", 
                cl.ratio = 0.2,
                tl.srt = 50,
                bg = "White",
                diag = FALSE
                ) 

par(oldp) 
```


### Heatpoint

```{r}

plot_ly(x=colnames(mydata.coeff), y=rownames(mydata.coeff), z = mydata.coeff, type = "heatmap")

```

### Explicación
<div class="box">
De este analisis podemos identificar correlaciones considerables, por ejemplo

+body mass index vs weight 0.90

+service time vs body mass index 0.4997

+service time vs age 0.671

-Disciplinary failure vs reasons for absence -0.5450

</div>

### índice de masa corporal vs peso
```{r}
P1 <- datos %>%
  group_by(Body.mass.index)%>%
  ggplot(mapping = aes(x= Body.mass.index,y= Weight)) + 
  geom_point()+ geom_smooth(method = 'lm') + 
  labs(title='Índice de masa corporal vs peso',x='Índice de masa corporal',y='Peso')

P1 %>% plotly::ggplotly()
```

### Tiempo de servicio vs índice de masa corporal
```{r}
P2 <- datos %>%
  group_by(Service.time)%>%
  ggplot(mapping = aes(x= Service.time,y= Body.mass.index)) + 
  geom_point()+ geom_smooth(method = 'lm') + 
  labs(title='Tiempo de servicio vs índice de masa corporal',x='Tiempo de servicio',y='Índice de masa corporal')

P2 %>% plotly::ggplotly()
```


### Tiempo de servicio vs Edad
```{r}
P3 <- datos %>%
  group_by(Age)%>%
  ggplot(mapping = aes(x= Age,y= Service.time)) + 
  geom_point()+ geom_smooth(method = 'lm') + 
  labs(title='Analysis of Service time across Age',x='Age',y='Service time')

P3 %>% plotly::ggplotly()
```



## Column 2 {data-width=500 .tabset}
### Razones de ausencia 

```{r}
a1 <- datos %>%
  group_by(Reason.for.absence)%>%
  ggplot(mapping = aes(x = fct_rev(fct_infreq(Reason.for.absence))))+
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=28)) + 
  scale_y_continuous(labels = scales::percent) +
  coord_flip()+
  labs(x = "Causas medicas de ausencia", y = "Porcentaje")
a1 %>% plotly::ggplotly()
            
```

### Meses de ausencia 

```{r}
a2 <- datos %>%
  group_by(Month.of.absence)%>%
  count()%>%
  ggplot(mapping = aes(x = fct_infreq(Month.of.absence)))+
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=13)) + 
  scale_y_continuous(labels = scales::percent)+
  labs(x = "Meses", y = "Porcentaje de ausencia")

a2 %>% plotly::ggplotly()
            
```
### Días de ausencia 

```{r}
a3 <- datos %>%
  group_by(Day.of.the.week)%>%
  count()%>%
  ggplot(mapping = aes(x = fct_infreq(Day.of.the.week)))+
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=5)) + 
  scale_y_continuous(labels = scales::percent)+
  labs(x = "Meses", y = "Porcentaje de ausencia")

a3 %>% plotly::ggplotly()
            
```

### Temporadas 

```{r}
a4 <- datos %>%
  group_by(Seasons)%>%
  count()%>%
  ggplot(mapping = aes(x = fct_infreq(Seasons)))+
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=4)) + 
  scale_y_continuous(labels = scales::percent)+
  labs(x = "Temporadas", y = "Porcentaje de ausencia")

a4 %>% plotly::ggplotly()
            
```
### Educación 

```{r}
a5 <- datos %>%
  group_by(Education)%>%
  count()%>%
  ggplot(mapping = aes(x = fct_infreq(Education)))+
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=4)) + 
  scale_y_continuous(labels = scales::percent)+
  labs(x = "Educación", y = "Porcentaje de ausencia")

a5 %>% plotly::ggplotly()
            
```
### Hijos 

```{r}
a5 <- datos %>%
  group_by(Son)%>%
  count()%>%
  ggplot(mapping = aes(x = fct_infreq(Son)))+
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=5)) + 
  scale_y_continuous(labels = scales::percent)+
  labs(x = "Temporadas", y = "Porcentaje de ausencia")

a5 %>% plotly::ggplotly()
            
```


### Bebedor social 

```{r}
a6 <- datos %>%
  group_by(Social.drinker)%>%
  count()%>%
  ggplot(mapping = aes(x = fct_infreq(Social.drinker)))+
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=2)) + 
  scale_y_continuous(labels = scales::percent)+
  labs(x = "Bebedor", y = "Porcentaje de ausencia")

a6 %>% plotly::ggplotly()
            
```

### Fumador social 

```{r}
a7 <- datos %>%
  group_by(Social.smoker)%>%
  count()%>%
  ggplot(mapping = aes(x = fct_infreq(Social.smoker)))+
  geom_bar(aes(y = (..count..)/sum(..count..)), fill = turbo(n=2)) + 
  scale_y_continuous(labels = scales::percent)+
  labs(x = "Bebedor", y = "Porcentaje de ausencia")

a7 %>% plotly::ggplotly()
            
```

### Bebedores y Fumadores social 
```{r}
a6.7 <- ggplot(datos, aes(x =  Social.smoker, fill =  Social.drinker)) + 
  geom_bar()+
  scale_fill_manual(values = c(mako(n=4)))+
  ylab("Conteo")+
  xlab("Fumadores")+
  guides(fill = guide_legend(title = "Bebedores sociales"))


a6.7  %>% plotly::ggplotly()
```


### Mascotas 

```{r}
a8 <- ggplot(datos, aes(x = Pet, fill = Pet)) + 
  geom_bar()+
  labs(y = "Conteo", x = "Numero de mascotas")+
  scale_fill_manual(values = c(turbo(n=6)))


a8 %>% plotly::ggplotly()
```
### Análisis 
<div class="box">
Las cuatro primeras variables de enfermedades de ausencia cubren el 50% de las razones de ausencia.
medical consultation, dental consultation, physiotherapy, isease of genitourinary system.

En cuanto a los meses con mayor ausencia, no parece haber realmente un mes más notorio o explicativo. Al igual que los días de la semana y las temporadas.

Con respecto a la educación, existe más del 80% de ausentismo en aquellas personas que tienen una educación de bachillerato.

Tener más hijos tampoco parece estar relacionado positivamente con las faltas, ya que los que no tienen hijos son los que más faltan y las faltas se reducen a medida que se tienen más hijos. No se sabe si este fenomeno se da debido a que existen menos peronas con 4, 3 y 2 hijos.

Por otro lado, los fumadores y bebedores.Existen 400 que no fuman y que si beben, y existen 286 que no fuman y no beben con faltas. 686 gentes que no fuman. Entonces se podría decir que no hay relación significativa entre los vicios con las faltas

No se ve relación entre gente con mascotas y faltas.


Entonces, ¿existe relación entre los bebedores y las edades?
En el siguiente gráfio se presenta este fenomeno, en el que se muestra a la gente de 
-33 años que si beben con 104 horas
-28 años que no beben con 112 horas
-34 años que si beben con 120 horas
-50 años que si beben con 120 horas
-58 años que no beben con 120 horas

Parece que tiene que ver más con la edad que con el beber.
</div>

### Edad y bebedores 

```{r}
p <- datos %>%
  group_by(Age)%>%
  count()%>%
  ggplot(mapping = aes(x = Age, y = Absenteeism.time.in.hours, fill= Social.drinker))+
  geom_bar(stat='identity',position= position_dodge()) + 
      scale_x_continuous(breaks =c(seq(20,60,5)),limits=c(20,60))+
  labs(y = "Tiempo de absentismo en horas", x = "Edad",)+
  guides(fill = guide_legend(title = "Bebedor social"))+
  scale_fill_manual(values = c(turbo(n=2)))

p %>% plotly::ggplotly()
```


# PCA
## Column 1 {data-width=500 .tabset}
### Matriz var

```{r}

datatable(mydata.cov, class = 'cell-border stripe')%>%
  formatRound(
    columns = 1:19,
    digits = 3
)

```
### Matriz Cov
```{r}
datatable(mydata.coeff, class = 'cell-border stripe')%>%
  formatRound(
    columns = 1:19,
    digits = 3
)

```
### Matriz p-valores
```{r}
datatable(mydata.p, class = 'cell-border stripe')%>%
  formatRound(
    columns = 1:19,
    digits = 3
)

```

### PCA
```{css, echo=FALSE}
pre {
  max-height: 500px;
  overflow-y: auto;
}

pre[class] {
  max-height: 100px;
}
```

```{r}
df$Work.load.Average.day <- as.numeric(as.character(df$Work.load.Average.day ))
datospca <- df %>%
  select(-ID) %>%
  select(-Absenteeism.time.in.hours)

datospca = select_if(datospca, is.numeric)
acp <- prcomp(datospca, 
              center = TRUE,
              scale = TRUE)

if (1 + 1 == 2) {
  # of course that is true
  print(acp)
  # we just printed a lengthy data set
}

```
### PCA
```{css, echo=FALSE}
pre {
  max-height: 500px;
  overflow-y: auto;
}

pre[class] {
  max-height: 100px;
}
```
```{r}
df$Work.load.Average.day <- as.numeric(as.character(df$Work.load.Average.day ))
datospca <- df %>%
  select(-ID) %>%
  select(-Absenteeism.time.in.hours)
datospca <- scale(datospca)  


if (1 + 1 == 2) {
  # of course that is true
  print(datospca)
  # we just printed a lengthy data set
}

```

### DATOS PCAPLI
```{css, echo=FALSE}
pre {
  max-height: 500px;
  overflow-y: auto;
}

pre[class] {
  max-height: 100px;
}
```
```{r}

pcaaplicacion <- PCA(datospca,graph = F)

if (1 + 1 == 2) {
  # of course that is true
  print(pcaaplicacion)
  # we just printed a lengthy data set
}

```


### Egevalor
```{css, echo=FALSE}
pre {
  max-height: 500px;
  overflow-y: auto;
}

pre[class] {
  max-height: 100px;
}
```
```{r}

egevalor <- get_eigenvalue(pcaaplicacion)


if (1 + 1 == 2) {
  # of course that is true
  print(egevalor)
  # we just printed a lengthy data set
}

```






























## Column 2 {data-width=500 .tabset}
### Plots

```{r results = FALSE}


plot(acp, type = "l")

biplot(acp, scale = 0)
```

```{r results = FALSE}


fviz_eig(pcaaplicacion,addlabels=T)
fviz_pca_var(pcaaplicacion,col.var='red')
fviz_cos2(pcaaplicacion,choice='var',axes=1:2)
```

```{r}

```

